<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Python | My Octopress Blog]]></title>
  <link href="http://sudharsh.github.io/blog/categories/python/atom.xml" rel="self"/>
  <link href="http://sudharsh.github.io/"/>
  <updated>2013-10-22T17:40:26+05:30</updated>
  <id>http://sudharsh.github.io/</id>
  <author>
    <name><![CDATA[Your Name]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Save your staplers!]]></title>
    <link href="http://sudharsh.github.io/blog/2011/02/06/save-your-staplers/"/>
    <updated>2011-02-06T21:15:18+05:30</updated>
    <id>http://sudharsh.github.io/blog/2011/02/06/save-your-staplers</id>
    <content type="html"><![CDATA[<p>Picture this. You are at work on a Friday evening. You are all pumped up! Who wouldn&rsquo;t be. Two full days of zero work ahead! You shutdown your computer, rise up, turn around to leave and BAM! This happens,</p>

<p><a href="http://sudharsh.files.wordpress.com/2011/02/office-space.jpg"><img src="http://sudharsh.files.wordpress.com/2011/02/office-space.jpg" alt="" /></a></p>

<p>The key to &lsquo;<a href="http://en.wikipedia.org/wiki/Bill_Lumbergh">Lumberg Evasion</a>&rsquo; is not only to stay &lsquo;hidden&rsquo; but also to be aware of your boss' whereabouts. Information is wealth and can potentially save your weekend.</p>

<p>I wanted to check out Pygame and hacked out a little python script which does this. The idea is that you position your webcam (el-cheapo-no-brand webcams sell for peanuts) near your cubicle/desk and get notified if there is some movement in a predefined area. Also works great if you have a laptop and want to know if someone is peeking over your shoulder (yeah, yeah&hellip; I know about mirrors).</p>

<p>The script can detect movements within the red rectangle. Here is how it does this</p>

<ul>
<li><p>When we start the script, the average color within the red rectangle is determined. This will act as the reference color.</p></li>
<li><p>Deviations in this average color is monitored in consecutive frames. If its more than a certain threshold, there is some movement.</p></li>
<li><p>When this happens, play a sound and pop up a little notification</p></li>
</ul>


<p>[caption id=&ldquo;attachment_407&rdquo; align=&ldquo;aligncenter&rdquo; width=&ldquo;500&rdquo; caption=&ldquo;All is well&rdquo;]<a href="http://sudharsh.files.wordpress.com/2011/02/screenshot-22.png"><img src="http://sudharsh.files.wordpress.com/2011/02/screenshot-22.png" alt="" /></a>[/caption]</p>

<p>[caption id=&ldquo;attachment_409&rdquo; align=&ldquo;aligncenter&rdquo; width=&ldquo;500&rdquo; caption=&ldquo;Dad walks in and gets caught&rdquo;]<a href="http://sudharsh.files.wordpress.com/2011/02/screenshot-21.png"><img src="http://sudharsh.files.wordpress.com/2011/02/screenshot-21.png" alt="" /></a>[/caption]</p>

<p>[caption id=&ldquo;attachment_410&rdquo; align=&ldquo;aligncenter&rdquo; width=&ldquo;426&rdquo; caption=&ldquo;Notifications using pynotify&rdquo;]<a href="http://sudharsh.files.wordpress.com/2011/02/screenshot-211.png"><img src="http://sudharsh.files.wordpress.com/2011/02/screenshot-211.png" alt="" /></a>[/caption]</p>

<p>Of course, it goes without saying that its just a simple hack. Works well if the background color is of an uniform color.</p>

<p>P.S: No, I don&rsquo;t work for an &lsquo;Initech&rsquo;.</p>

<p>P.P.S: If you are one of those &lsquo;Bill Lumberg&rsquo; types, Fuck you!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mashing Twitter and FSO]]></title>
    <link href="http://sudharsh.github.io/blog/2009/12/06/mashing-twitter-and-fso/"/>
    <updated>2009-12-06T19:57:14+05:30</updated>
    <id>http://sudharsh.github.io/blog/2009/12/06/mashing-twitter-and-fso</id>
    <content type="html"><![CDATA[<p>I really love Twitter and it didn&rsquo;t make any sense to me to shell out a rupee for every tweet sent through my Airtel Mobile. Moreover, I am on one of those monthly booster packs which allows you to send 22000 text messages for free. I simply had to exploit this by setting up my own little &lsquo;OC&rsquo; twitter forwarder written in python. (I know of smstweet.in service but I am still charged 1.50 for every tweet I send)</p>

<p>Its insanely simple to write such a &lsquo;forwarder&rsquo; in python using the services provided by the FSO (<a href="http://wiki.freesmartphone.org">freesmartphone.org</a>) Framework,</p>

<ol>
<li><p> Send messages to your old/unused number whose SIM is in the <a href="http://openmoko.com/freerunner.html">Freerunner</a> (or any other device supported by the <a href="http://wiki.freesmartphone.org">FSO</a> framework)</p></li>
<li><p> Handle the incoming messages and use <a href="http://code.google.com/p/python-twitter/">python-twitter</a> API (or) raw urllib2 to post updates. Of course, the device should be connected to the internet, you can <a href="http://wiki.openmoko.org/wiki/Usb_networking">tether</a> this device to an old unused computer. Simply put, the Freerunner should be able to access the internet.</p></li>
</ol>


<p>I know this is dumb given cheap GPRS and all, but what the heck; Sundays <em>are</em> reserved for dumb things and I wanted to show off how easy it is to develop and conjure up simple but powerful scripts using open hackable hardware like the Freerunner. So take off your pedantic hats ;)</p>

<p>Here is the actual python code,</p>

<p>[sourcecode language=&ldquo;python&rdquo;]</p>

<h1>!/usr/bin/env python</h1>

<h1>Written By Sudharshan S, <a href="http://sudharsh.wordpress.com">http://sudharsh.wordpress.com</a></h1>

<p>import dbus
import time
import logging
import twitter</p>

<p>import gobject
from gobject import MainLoop</p>

<p>from dbus.mainloop.glib import DBusGMainLoop
DBusGMainLoop (set_as_default = True)</p>

<h1>Use OAUTH?</h1>

<p>USERNAME = &ldquo;username&rdquo;
PASSWORD = &ldquo;password&rdquo;</p>

<p>log = logging.getLogger(&ldquo;TweetForwarder&rdquo;)</p>

<p>class TweetForwarder:</p>

<p>   &ldquo;&rdquo;&ldquo;Process Incoming messages and update twitter status</p>

<pre><code>  if the message startswith 'tweet'
</code></pre>

<p>   &ldquo;&rdquo;"</p>

<p>   def <strong>init</strong>(self, username, password):</p>

<pre><code>   log.warning("Starting up....")
   self.twitter_api = twitter.Api(username=username, password=password)

   # Get proxies and add signal handlers
   bus = dbus.SystemBus()
   _usage = bus.get_object("org.freesmartphone.ousaged",
                           "/org/freesmartphone/Usage")
   _proxy = bus.get_object("org.freesmartphone.ogsmd", \
                           "/org/freesmartphone/GSM/Device")
   self.usage_iface = dbus.Interface(_usage, "org.freesmartphone.Usage")
   self.usage_iface.RequestResource('GSM')
   self.sms_iface = dbus.Interface (_proxy, "org.freesmartphone.GSM.SMS")
   self.sms_iface.connect_to_signal ("IncomingMessage", self.onIncomingMessage)
</code></pre>

<p>   def onIncomingMessage(self, sender, message, kwargs):</p>

<pre><code>   log.warning("Received SMS from %s:%s" % (sender, message))
   # We don't ALL messages to this number to be tweeted
   if message.strip().startswith("tweet "):
       log.warning("Trying to update status : %s" % message[6:].strip())
       self.twitter_api.PostUpdate(message[6:])
       log.warning("Updated Status")
</code></pre>

<p>   def run(self):</p>

<pre><code>   loop = MainLoop()
   loop.run()
</code></pre>

<p>if <strong>name</strong> == &ldquo;<strong>main</strong>&rdquo;:</p>

<pre><code>logging.basicConfig()
server = TweetForwarder(USERNAME, PASSWORD)
server.run()
</code></pre>

<p>[/sourcecode]</p>

<p>Make sure you have python-netclient and python-json installed on your Freerunner. These can be installed using the &lsquo;opkg install&rsquo; command.</p>

<p>The script and the accompanying dependency can be downloaded from <a href="http://gitorious.org/dumb-scripts/dumb-scripts/archive-tarball/master">here</a>. Just change the USERNAME and PASSWORD accordingly after scp'ing the tarball to your device.</p>

<p>Some useful links,</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why Python?]]></title>
    <link href="http://sudharsh.github.io/blog/2009/05/11/why-python/"/>
    <updated>2009-05-11T22:56:44+05:30</updated>
    <id>http://sudharsh.github.io/blog/2009/05/11/why-python</id>
    <content type="html"><![CDATA[<p>Ever had that feeling of insignificance? The feeling that your very existence is a microscopic peanut in the grand scheme of things. By grand, I mean the <a href="http://hhgproject.org/entries/wsogmm.html">Whole Sort of General Mish Mash</a>. I am going through that right now. We are, according to our own theories an extremely smart species, yet for every answer we discover, 10 more questions creep up like one of those annoying LOLCATS shouting <a href="http://icanhascheezburger.com/2009/03/02/funny-pictures-ohai-2/">&lsquo;OH HAI&rsquo;</a>. What the hell is the purpose of life? Why do we exist? What is our place in this infinite Cosmos (See the embedded video)? Its incredibly creepy even to think that our entire life is just a mega-complex probability equation, which most likely is too complex for our puny brains to comprehend.</p>

<p>[youtube=<a href="http://www.youtube.com/watch?v=2pfwY2TNehw&amp;hl=en&amp;fs=1">http://www.youtube.com/watch?v=2pfwY2TNehw&amp;hl=en&amp;fs=1</a>]</p>

<p>Yeah, so basically what I am coming at is simple. Party now, Life is too short to be spent over unnecessary complications. Or in other words <strong><em>Frigging Use Python!!!!</em></strong></p>

<p><a href="http://imgs.xkcd.com/comics/python.png"><img src="http://imgs.xkcd.com/comics/python.png" alt="" /></a>(Strip from XKCD)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SHR, fsod and certain other things.]]></title>
    <link href="http://sudharsh.github.io/blog/2008/11/23/shr-fsod-and-certain-other-things/"/>
    <updated>2008-11-23T12:28:55+05:30</updated>
    <id>http://sudharsh.github.io/blog/2008/11/23/shr-fsod-and-certain-other-things</id>
    <content type="html"><![CDATA[<p><a href="http://wiki.openmoko.org/wiki/SHR">SHR</a> (Stable Hybrid Release) released images recently and boy, did they do an awesome job at it. By far, SHR and Debian are some of the images that uses the <a href="http://git.freesmartphone.org/">FSO daemons</a> by default. So turns out to be a great testing ground for the FSO APIs. And after a long while, I also got some time to play with my Freerunner. Here is a screenshot of TangoGPS in action.</p>

<p><a href="http://sudharsh.files.wordpress.com/2008/11/screenshot-11.png"><img src="http://sudharsh.files.wordpress.com/2008/11/screenshot-11.png?w=225" alt="screenshot-11" /></a>Hmm..Someone seems to have mapped Chitlapakkam and East Tambaram a bit for <a href="http://openstreetmap.org/">OSM</a>. Wondering who that is. :)</p>

<p>As for fsod, I could really use some help especially with autotools. I managed to set up a preliminary a python scripting interface so that fsod can load python scripts. But that&rsquo;s as far as I got. Apparently DBus needs a mainloop to be setup for exporting objects on the system bus. And since GObject introspection in python seems to be absent at the moment, I had to create bindings to my code. This process is documented and explained <a href="http://www.ibm.com/developerworks/linux/library/l-wrap/">here</a>. But still, I am at a loss as to how to pass the DBus connection object from the mainloop to the python scripts. If someone knows how to do this, please poke me.</p>

<p>The code could be found <a href="http://git.freesmartphone.org/?p=openmoko-gsoc2008.git;a=summary">here</a>. (src/subsystems/Python especially can use some love)</p>

<p>Update: I made a package out of today&rsquo;s tree. Find it <a href="http://sudharsh.mukt.in/fsod_0.1-r0_armv4t.opk">here</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SMSHack...how not to design GUIs]]></title>
    <link href="http://sudharsh.github.io/blog/2007/12/27/smshackhow-not-to-design-guis/"/>
    <updated>2007-12-27T02:31:35+05:30</updated>
    <id>http://sudharsh.github.io/blog/2007/12/27/smshackhow-not-to-design-guis</id>
    <content type="html"><![CDATA[<p>I got to test some code in the neo and found that sms sending using pygsmd works quite well!!..Also I was looking for an opportunity to brush up my 2 hour stint with pyGTK which I had a long long time ago. What better reason than to create a dirty, scrawny, crufty, fugly GUI for sending SMS. Heres a screenshot of the GUI in action taken from the neo itself. It doesnt really follow any GUI guidelines (who would care at 2:30 AM)&hellip;When you click SendSMS, it calls pygsmd.sms.send() and sends your message..and when you click Quit button, the obvious thing happens.</p>

<p><a href="http://sudharsh.files.wordpress.com/2007/12/screenshot-1.png"><img src="http://sudharsh.files.wordpress.com/2007/12/screenshot-1.thumbnail.png" alt="screenshot-1.png" /></a></p>

<p>Oh there is also this another more better looking tool called <a href="http://wiki.openmoko.org/wiki/SMSTool">SMSTool</a> by alessandro, you might want to check that out as well if you want, it achieves its purpose in a weird sort of interesting way. It communicates with libgsmd-tool in shell mode through python subprocesses.</p>

<p>If anyone is willing to modify the GUI and make it look more humane, be my guest..It ofcourse depends on pygtk and its dependencies</p>

<p>P.S: SVN in projects.openmoko.org seems to be down. So I was not able to commit these example scripts.</p>

<p>Goofup: I did it again..The SMSTool is written by <a href="http://mput.de/blog/">kriss</a> and maintaned by alessandro</p>
]]></content>
  </entry>
  
</feed>
