<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tips | My Octopress Blog]]></title>
  <link href="http://sudharsh.github.io/blog/categories/tips/atom.xml" rel="self"/>
  <link href="http://sudharsh.github.io/"/>
  <updated>2013-10-22T17:40:26+05:30</updated>
  <id>http://sudharsh.github.io/</id>
  <author>
    <name><![CDATA[Your Name]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Save your staplers!]]></title>
    <link href="http://sudharsh.github.io/blog/2011/02/06/save-your-staplers/"/>
    <updated>2011-02-06T21:15:18+05:30</updated>
    <id>http://sudharsh.github.io/blog/2011/02/06/save-your-staplers</id>
    <content type="html"><![CDATA[<p>Picture this. You are at work on a Friday evening. You are all pumped up! Who wouldn&rsquo;t be. Two full days of zero work ahead! You shutdown your computer, rise up, turn around to leave and BAM! This happens,</p>

<p><a href="http://sudharsh.files.wordpress.com/2011/02/office-space.jpg"><img src="http://sudharsh.files.wordpress.com/2011/02/office-space.jpg" alt="" /></a></p>

<p>The key to &lsquo;<a href="http://en.wikipedia.org/wiki/Bill_Lumbergh">Lumberg Evasion</a>&rsquo; is not only to stay &lsquo;hidden&rsquo; but also to be aware of your boss' whereabouts. Information is wealth and can potentially save your weekend.</p>

<p>I wanted to check out Pygame and hacked out a little python script which does this. The idea is that you position your webcam (el-cheapo-no-brand webcams sell for peanuts) near your cubicle/desk and get notified if there is some movement in a predefined area. Also works great if you have a laptop and want to know if someone is peeking over your shoulder (yeah, yeah&hellip; I know about mirrors).</p>

<p>The script can detect movements within the red rectangle. Here is how it does this</p>

<ul>
<li><p>When we start the script, the average color within the red rectangle is determined. This will act as the reference color.</p></li>
<li><p>Deviations in this average color is monitored in consecutive frames. If its more than a certain threshold, there is some movement.</p></li>
<li><p>When this happens, play a sound and pop up a little notification</p></li>
</ul>


<p>[caption id=&ldquo;attachment_407&rdquo; align=&ldquo;aligncenter&rdquo; width=&ldquo;500&rdquo; caption=&ldquo;All is well&rdquo;]<a href="http://sudharsh.files.wordpress.com/2011/02/screenshot-22.png"><img src="http://sudharsh.files.wordpress.com/2011/02/screenshot-22.png" alt="" /></a>[/caption]</p>

<p>[caption id=&ldquo;attachment_409&rdquo; align=&ldquo;aligncenter&rdquo; width=&ldquo;500&rdquo; caption=&ldquo;Dad walks in and gets caught&rdquo;]<a href="http://sudharsh.files.wordpress.com/2011/02/screenshot-21.png"><img src="http://sudharsh.files.wordpress.com/2011/02/screenshot-21.png" alt="" /></a>[/caption]</p>

<p>[caption id=&ldquo;attachment_410&rdquo; align=&ldquo;aligncenter&rdquo; width=&ldquo;426&rdquo; caption=&ldquo;Notifications using pynotify&rdquo;]<a href="http://sudharsh.files.wordpress.com/2011/02/screenshot-211.png"><img src="http://sudharsh.files.wordpress.com/2011/02/screenshot-211.png" alt="" /></a>[/caption]</p>

<p>Of course, it goes without saying that its just a simple hack. Works well if the background color is of an uniform color.</p>

<p>P.S: No, I don&rsquo;t work for an &lsquo;Initech&rsquo;.</p>

<p>P.P.S: If you are one of those &lsquo;Bill Lumberg&rsquo; types, Fuck you!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[simplejson's simple gotcha]]></title>
    <link href="http://sudharsh.github.io/blog/2010/09/18/simplejsons-simple-gotcha/"/>
    <updated>2010-09-18T00:00:17+05:30</updated>
    <id>http://sudharsh.github.io/blog/2010/09/18/simplejsons-simple-gotcha</id>
    <content type="html"><![CDATA[<p>I like simple things. Anything more complex more than &lsquo;simple&rsquo; is tough to deal with. Therefore it comes as no surprise that I love JSON. Heck, the entire grammar fits in a business card.</p>

<p>[caption id=&ldquo;&rdquo; align=&ldquo;aligncenter&rdquo; width=&ldquo;325&rdquo; caption=&ldquo;Source: <a href="http://www.flickr.com/photos/equanimity/3763158824/">http://www.flickr.com/photos/equanimity/3763158824/</a> (by superfluity)&rdquo;]<a href="http://www.flickr.com/photos/equanimity/3763158824/"><img src="http://farm3.static.flickr.com/2551/3763158824_e2f57810c4.jpg" alt="" /></a>[/caption]</p>

<p>If you take a closer look at the spec above, you will notice that the keys for a JSON &lsquo;dictionary&rsquo; should be strings. I have a feeling that programmers like me whose language-of-mass-destruction is python are likely to overlook this minor gotcha.</p>

<p>This is where it gets interesting. Python&rsquo;s json module tries to do something smart when you try to encode a python dictionary into a JSON string. In this case, all the keys are python ints.</p>

<p><code>In [3]: json.dumps({ 1 : 'Foo', 3: 'Baz'})
Out[3]: '{"1": "Foo", "3": "Baz"}'</code></p>

<p>When I decode it back to a python object&hellip;
<code>In [4]: json.loads(json.dumps({ 1 : 'Foo', 3: 'Baz'}))
Out[4]: {u'1': u'Foo', u'3': u'Baz'}</code></p>

<p>BAM! The json module silently converts all my integer keys to strings. I, for one, would have preferred an Exception to be raised instead.</p>

<p>Something like this, for example.
<code>In [19]: class F: pass
...
In [20]: f = F()
In [21]: json.loads(json.dumps({ f : 'Foo', 3: 'Baz'}))
... snip errors ...
TypeError: key &lt;__main__.F instance at 0x92b4b2c&gt; is not a string</code></p>

<p>In this case, I get the desired behaviour where a &lsquo;TypeError&rsquo; is raised. Stupid example, but you get the idea.</p>

<p>If I am missing something obvious here please do comment. This particular cheekiness of the json module caught me unawares recently. Or maybe I was wrong in expecting the decode operation to return something that is identical to the source.</p>

<p>Interestingly, the json support modules that ship with TurboGears error out if you try to return a dictionary having non-string keys from your controller methods.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[24camp - Be there]]></title>
    <link href="http://sudharsh.github.io/blog/2010/02/10/24camp-be-there/"/>
    <updated>2010-02-10T17:49:25+05:30</updated>
    <id>http://sudharsh.github.io/blog/2010/02/10/24camp-be-there</id>
    <content type="html"><![CDATA[<p>Last week, <a href="http://24camp.org/">24camp</a> started out as a means for people to get together and work on interesting projects/ideas.</p>

<p>Serendio will be hosting one this weekend, 13th February. We have place for about 20 &ndash; 25 in our office premises. More information can be found <a href="http://24camp.org/Camp/13Feb2010">here</a>.</p>

<p>You can also participate virtually by logging on to #24camp IRC channel on the Freenode servers. If you want to start a local, group of your own add your group in the wiki page mentioned above.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mashing Twitter and FSO]]></title>
    <link href="http://sudharsh.github.io/blog/2009/12/06/mashing-twitter-and-fso/"/>
    <updated>2009-12-06T19:57:14+05:30</updated>
    <id>http://sudharsh.github.io/blog/2009/12/06/mashing-twitter-and-fso</id>
    <content type="html"><![CDATA[<p>I really love Twitter and it didn&rsquo;t make any sense to me to shell out a rupee for every tweet sent through my Airtel Mobile. Moreover, I am on one of those monthly booster packs which allows you to send 22000 text messages for free. I simply had to exploit this by setting up my own little &lsquo;OC&rsquo; twitter forwarder written in python. (I know of smstweet.in service but I am still charged 1.50 for every tweet I send)</p>

<p>Its insanely simple to write such a &lsquo;forwarder&rsquo; in python using the services provided by the FSO (<a href="http://wiki.freesmartphone.org">freesmartphone.org</a>) Framework,</p>

<ol>
<li><p> Send messages to your old/unused number whose SIM is in the <a href="http://openmoko.com/freerunner.html">Freerunner</a> (or any other device supported by the <a href="http://wiki.freesmartphone.org">FSO</a> framework)</p></li>
<li><p> Handle the incoming messages and use <a href="http://code.google.com/p/python-twitter/">python-twitter</a> API (or) raw urllib2 to post updates. Of course, the device should be connected to the internet, you can <a href="http://wiki.openmoko.org/wiki/Usb_networking">tether</a> this device to an old unused computer. Simply put, the Freerunner should be able to access the internet.</p></li>
</ol>


<p>I know this is dumb given cheap GPRS and all, but what the heck; Sundays <em>are</em> reserved for dumb things and I wanted to show off how easy it is to develop and conjure up simple but powerful scripts using open hackable hardware like the Freerunner. So take off your pedantic hats ;)</p>

<p>Here is the actual python code,</p>

<p>[sourcecode language=&ldquo;python&rdquo;]</p>

<h1>!/usr/bin/env python</h1>

<h1>Written By Sudharshan S, <a href="http://sudharsh.wordpress.com">http://sudharsh.wordpress.com</a></h1>

<p>import dbus
import time
import logging
import twitter</p>

<p>import gobject
from gobject import MainLoop</p>

<p>from dbus.mainloop.glib import DBusGMainLoop
DBusGMainLoop (set_as_default = True)</p>

<h1>Use OAUTH?</h1>

<p>USERNAME = &ldquo;username&rdquo;
PASSWORD = &ldquo;password&rdquo;</p>

<p>log = logging.getLogger(&ldquo;TweetForwarder&rdquo;)</p>

<p>class TweetForwarder:</p>

<p>   &ldquo;&rdquo;&ldquo;Process Incoming messages and update twitter status</p>

<pre><code>  if the message startswith 'tweet'
</code></pre>

<p>   &ldquo;&rdquo;"</p>

<p>   def <strong>init</strong>(self, username, password):</p>

<pre><code>   log.warning("Starting up....")
   self.twitter_api = twitter.Api(username=username, password=password)

   # Get proxies and add signal handlers
   bus = dbus.SystemBus()
   _usage = bus.get_object("org.freesmartphone.ousaged",
                           "/org/freesmartphone/Usage")
   _proxy = bus.get_object("org.freesmartphone.ogsmd", \
                           "/org/freesmartphone/GSM/Device")
   self.usage_iface = dbus.Interface(_usage, "org.freesmartphone.Usage")
   self.usage_iface.RequestResource('GSM')
   self.sms_iface = dbus.Interface (_proxy, "org.freesmartphone.GSM.SMS")
   self.sms_iface.connect_to_signal ("IncomingMessage", self.onIncomingMessage)
</code></pre>

<p>   def onIncomingMessage(self, sender, message, kwargs):</p>

<pre><code>   log.warning("Received SMS from %s:%s" % (sender, message))
   # We don't ALL messages to this number to be tweeted
   if message.strip().startswith("tweet "):
       log.warning("Trying to update status : %s" % message[6:].strip())
       self.twitter_api.PostUpdate(message[6:])
       log.warning("Updated Status")
</code></pre>

<p>   def run(self):</p>

<pre><code>   loop = MainLoop()
   loop.run()
</code></pre>

<p>if <strong>name</strong> == &ldquo;<strong>main</strong>&rdquo;:</p>

<pre><code>logging.basicConfig()
server = TweetForwarder(USERNAME, PASSWORD)
server.run()
</code></pre>

<p>[/sourcecode]</p>

<p>Make sure you have python-netclient and python-json installed on your Freerunner. These can be installed using the &lsquo;opkg install&rsquo; command.</p>

<p>The script and the accompanying dependency can be downloaded from <a href="http://gitorious.org/dumb-scripts/dumb-scripts/archive-tarball/master">here</a>. Just change the USERNAME and PASSWORD accordingly after scp'ing the tarball to your device.</p>

<p>Some useful links,</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The fat penguin on Sony Vaio CR]]></title>
    <link href="http://sudharsh.github.io/blog/2008/04/07/the-fat-penguin-on-sony-vaio-cr/"/>
    <updated>2008-04-07T00:59:28+05:30</updated>
    <id>http://sudharsh.github.io/blog/2008/04/07/the-fat-penguin-on-sony-vaio-cr</id>
    <content type="html"><![CDATA[<p>As I said in my earlier post, Vista didn&rsquo;t last long. I was planning to install Gentoo in my Vaio CR 36 but couldnt, as it had problems with the ethernet card ( not to mention the wireless). My option was to install Ubuntu Gutsy as it has very good support for laptops out of the box. But Gutsy couldn&rsquo;t get sound working and hence found a perfect excuse to upgrade to hardy beta.</p>

<p>24 after upgrading to hardy, came to know that beta_1 of gentoo 2008.0 is out. Downloaded the 64 bit mrinimal iso and got it up and running on my laptop. Things that doesn&rsquo;t work in both the distros (as of now. May change as I RTFM more)..</p>

<ul>
<li><p>Fn keys for the brightness controls. I have a brightness applet in my panel, so no real big deal.</p></li>
<li><p>The Ricoh webcam. lsusb picks up the device and whats more strange; the <a href="http://wiki.mediati.org/R5u870">r5u870</a> driver gets loaded and the device node &lsquo;/dev/video0&rsquo; is getting created properly. Neither cheese nor camorama could pick up the camera. The device id is &ldquo;05ca:1839&rdquo;, which seems to be well supported. Maybe I am missing something obvious (yes, the firmware files are in place)</p></li>
<li><p>The fingerprint reader. Its the same as that of the ones from the Thinkpads but thinkfinger doesn&rsquo;t support vaios :S</p></li>
<li><p>Bluetooth, gets detected by hciconfig but other devices can&rsquo;t see my laptop. (See below)</p></li>
</ul>


<p>If anyone had any luck with the above, please let me know.</p>

<p>What works..</p>

<ul>
<li><p>DRI with the binary &lsquo;fglrx&rsquo;</p></li>
<li><p>Sound works well</p></li>
<li><p>Wireless pwns with the iwl4965 module</p></li>
<li><p>Ethernet with the realtek modules</p></li>
<li><p><a href="http://www.gentoo-wiki.com/HOWTO_TuxOnIce">Software suspend to disk (and RAM)</a> using patches from the TuxOnIce project</p></li>
<li><p>Volume keys and media keys work like a charm.</p></li>
<li><p>Adobe doesn&rsquo;t offer support for flash on amd64. You can getaway with it by installing a 32 bit firefox binary alongside your 64 bit installation. &lsquo;emerge mozilla-firefox-bin netscape-flash&rsquo; and you are all set.</p></li>
<li><p>Bluetooth works beautifully. I have had issues with I/O errors with the chipset. But a post to the gentoo forums solved the issue. This VAIO comes with a Broadcom 2046 chipset. Be sure to &lsquo;emerge bluez-firmware&rsquo; just in case. Click <a href="http://forums.gentoo.org/viewtopic-t-687593.html">here</a> for the thread. Be sure to follow the wonderful <a href="http://www.gentoo.org/doc/en/bluetooth-guide.xml">gentoo bluetooth</a> guide. emerge gnome-phone-manager and gnome-bluetooth for extra fun</p></li>
</ul>


<p>The kernel .config and the xorg.conf with hardware acceleration for my laptop is <a href="http://sudharsh.unixpod.com/gentoofoo">here</a>, in case if anyone is interested.</p>

<p>Gentoo-wiki has been a great resource. Information about other vaios <a href="http://www.gentoo-wiki.com/Special:Search?search=sony+vaio&amp;go=Go">here</a>.</p>
]]></content>
  </entry>
  
</feed>
